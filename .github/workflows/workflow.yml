name: Java CI with Gradle

on:
  push:
    branches: [ master ]
    tags: [ deployment ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'
    - name: Setup and execute Gradle 'build' task
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build
    - name: Get the version
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
    - name: Docker login
      env:
        DOCKER_USERNAME: ${{ secrets.dockerhub_username }}
        DOCKER_PASSWORD: ${{ secrets.dockerhub_password }}
      run : docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" docker.io
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{secrets.docker_username}}/${{secrets.repo_name}}:${{steps.vars.outputs.tag}}
    - name: Publish dockerimage to docker hub
      run: docker push ${{secrets.docker_username}}/${{secrets.repo_name}}:${{steps.vars.outputs.tag}}
    - name: Build Docker image with latest tag
      run: docker build . --file Dockerfile --tag ${{secrets.docker_username}}/${{secrets.repo_name}}:latest
    - name: Publish dockerimage to docker hub
      run: docker push ${{secrets.docker_username}}/${{secrets.repo_name}}:latest


#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     if: contains(github.ref, 'deployment')
#     steps:
#       - uses: actions/checkout@master
#       - name: copy file via ssh password
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.server_hostname }}
#           username: ${{ secrets.server_user }}
#           key: ${{ secrets.openssh_private_key }}
#           source: "docker-compose.yml"
#           target: "/home/dockerfiles"
#       - name: Get the version
#         id: vars
#         run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
#       - name: Execute SSH commmands on remote server
#         uses: JimCronqvist/action-ssh@master
#         env:
#           APPLICATION_IMAGE_TAG: ${{steps.vars.outputs.tag}}
#           MYSQL_VERSION: ${{ secrets.MYSQL_VERSION }}
#           MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
#           MYSQL_USER: ${{ secrets.MYSQL_USERNAME }}
#           MYSQL_PASS: ${{ secrets.MYSQL_PASSWORD }}
#         with:
#           hosts: '${{ secrets.server_user }}@${{ secrets.server_hostname }}'
#           privateKey: ${{ secrets.openssh_private_key }}
#           debug: false
#           command: |
#             ls -lah
#             echo "ssh successful"
#             cd /home/dockerfiles/ && ./deploy.sh $APPLICATION_IMAGE_TAG $MYSQL_VERSION $MYSQL_ROOT_PASSWORD $MYSQL_USER $MYSQL_PASS